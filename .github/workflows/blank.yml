name: Fetch YouTube Playlist Videos

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  schedule:
    - cron: '0 0 * * 0' # Runs every week on Sunday at midnight

permissions:
  contents: write    

jobs:
  fetch-videos:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Fetch YouTube Playlist Videos
      env:
        API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        PLAYLIST_ID: 'PL2AONzGTULQLui1SrwchdTSs4VsJIHZuw'
      run: |
        # Fetch playlist items
        response=$(curl -s "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=$PLAYLIST_ID&maxResults=50&key=$API_KEY")
        video_ids=$(echo $response | jq -r '.items[].snippet.resourceId.videoId')

        videos=()
        for video_id in $video_ids; do
          # Fetch video details
          video_response=$(curl -s "https://www.googleapis.com/youtube/v3/videos?part=snippet&id=$video_id&key=$API_KEY")
          video_data=$(echo $video_response | jq '.items[0]')

          # Skip if items is empty
          if [ "$video_data" == "null" ]; then
            continue
          fi

          # Remove unwanted fields
          video_data=$(echo $video_data | jq 'del(.kind, .etag, .snippet.channelId, .snippet.channelTitle, .snippet.liveBroadcastContent, .snippet.localized, .snippet.categoryId, .snippet.publishedAt, .snippet.thumbnails.medium, .snippet.thumbnails.high, .snippet.thumbnails.standard, .snippet.thumbnails.maxres)')

          videos+=("$video_data")
        done

        # Save videos to a JSON file
        echo "${videos[@]}" | jq -s '.' > videos.json

    - name: Commit and push videos.json
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add videos.json
        git commit -m 'Update videos.json'
        git push
